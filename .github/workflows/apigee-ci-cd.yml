name: Apigee CI with apigeecli

# Controls when the workflow will run
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Apigeecli Version
        uses: docker://ghcr.io/apigee/apigeecli:latest
        id: apigeecli-version
        with:
          args: --version

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Set Variables depending on branch
      - name: Set Variables for [Main] branch
        if: github.ref == 'refs/heads/main'
        run: |
          echo "APIGEE_ORG=ssv-apigee-asm-demo" >> $GITHUB_ENV
          echo "APIGEE_ENV=eval" >> $GITHUB_ENV
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Set Variables for [Prod] branch
        if: github.ref == 'refs/heads/prod'
        run: |
          echo "APIGEE_ORG=ssv-apigee-asm-demo" >> $GITHUB_ENV
          echo "APIGEE_ENV=eval" >> $GITHUB_ENV
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Set Variables for branch not [Main], not [Prod]
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/prod'
        run: |
          echo "APIGEE_ORG=ssv-apigee-asm-demo" >> $GITHUB_ENV
          echo "APIGEE_ENV=eval" >> $GITHUB_ENV
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Authenticate Google Cloud
        id: 'gcp-auth'
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: 'projects/769749427232/locations/global/workloadIdentityPools/apigee-ci-cd-pool/providers/apigee-ci-cd-pool-provider'
          service_account: 'apigee-ci-cd@ssv-apigee-asm-demo.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: Apigeecli Get Org
        uses: docker://ghcr.io/apigee/apigeecli:latest
        id: apigeecli-get-org
        with:
          entrypoint: sh
          args: -c "apigeecli orgs get -o ${{ env.APIGEE_ORG }} -t ${{ steps.gcp-auth.outputs.access_token }}" | jq -r .state | xargs

      # - name: Apigeecli Import Bundle
      #   uses: docker://ghcr.io/apigee/apigeecli:latest
      #   id: apigeecli-import-bundle
      #   with:
      #     args: apis create bundle -f apiproxy -n currency-v2 --org ${{ env.APIGEE_ORG }} --token ${{ steps.gcp-auth.outputs.access_token }} --disable-check >> ${{ env.GITHUB_WORKSPACE }}/tmp/revision

      # - name: Print
      #   run: |
      #     cat $GITHUB_WORKSPACE/tmp/revision