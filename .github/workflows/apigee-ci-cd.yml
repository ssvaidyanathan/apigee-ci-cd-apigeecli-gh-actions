name: Apigee CI with apigeecli

# Controls when the workflow will run
on: push

#env:
  #GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Apigeecli Version
        uses: docker://ghcr.io/apigee/apigeecli:latest
        id: apigeecli-version
        with:
          args: --version

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Set Variables depending on branch
      - name: Set Variables for [Main] branch
        if: github.ref == 'refs/heads/main'
        run: |
          echo "APIGEE_ORG=bap-amer-coe-demo1"
          echo "APIGEE_PROFILE=test"
          echo "DEPLOYMENT_USER=cicduser"
          echo "DEPLOYMENT_SUFFIX=$(echo "")"

      - name: Set Variables for [Prod] branch
        if: github.ref == 'refs/heads/prod'
        run: |
          echo "APIGEE_ORG=sai-apigeex-demo"
          echo "APIGEE_PROFILE=prod"
          echo "DEPLOYMENT_USER=cicduser"
          echo "DEPLOYMENT_SUFFIX=$(echo "")"
      
      - name: Set Variables for branch not [Main], not [Prod]
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/prod'
        run: |
          echo "APIGEE_ORG=bap-amer-coe-demo1"
          echo "APIGEE_PROFILE=dev"
          echo "DEPLOYMENT_USER=cicduser"
          echo "DEPLOYMENT_SUFFIX=$(echo "")"

      - name: Print
        run: echo "APIGEE_ORG ${{ APIGEE_ORG }}" 

      # - name: Authenticate Google Cloud
      #   id: 'gcp-auth'
      #   uses: google-github-actions/auth@v1
      #   with:
      #     token_format: 'access_token'
      #     service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
